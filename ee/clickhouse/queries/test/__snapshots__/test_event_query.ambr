# name: TestEventQuery.test_account_filters
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id,
              version
     HAVING sum(sign) > 0)
  '
---
# name: TestEventQuery.test_account_filters.1
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id,
              version
     HAVING sum(sign) > 0)
  '
---
# name: TestEventQuery.test_account_filters.2
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id,
         e."person_properties" as "person_properties"
  FROM events e
  WHERE team_id = 2
    AND event = 'event_name'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-01-14 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-01-21 23:59:59')
    AND (has(['Jane'], replaceRegexpAll(JSONExtractRaw(e.person_properties, 'name'), '^"|"$', '')))
  '
---
# name: TestEventQuery.test_basic_event_filter
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'viewed'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-05-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-05-07 00:00:00')
  '
---
# name: TestEventQuery.test_cohort_filter
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'viewed'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-05-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-05-07 00:00:00')
    AND (e.person_id IN
           (SELECT id
            FROM person
            WHERE team_id = 2
              AND id IN
                (SELECT id
                 FROM person
                 WHERE team_id = 2
                   AND ((has(['test'], replaceRegexpAll(JSONExtractRaw(person.properties, 'name'), '^"|"$', '')))) )
            GROUP BY id
            HAVING max(is_deleted) = 0
            AND ((has(['test'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'name'), '^"|"$', ''))))))
  '
---
# name: TestEventQuery.test_denormalised_props
  '
  
  SELECT e.timestamp as timestamp,
         e."mat_test_prop" as "mat_test_prop",
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'user signed up'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2020-01-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2020-01-14 23:59:59')
    AND ((has(['hi'], "mat_test_prop"))
         AND (has(['hi'], "mat_test_prop")))
  '
---
# name: TestEventQuery.test_element
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'event_name'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-01-14 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-01-21 23:59:59')
    AND (((match(elements_chain, '(^|;)label(\\.|$|;|:)'))))
  '
---
# name: TestEventQuery.test_element.1
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'event_name'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-01-14 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-01-21 23:59:59')
    AND (0 = 192)
  '
---
# name: TestEventQuery.test_entity_filtered_by_cohort
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = '$pageview'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-05-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-05-07 00:00:00')
    AND (e.person_id IN
           (SELECT id
            FROM person
            WHERE team_id = 2
              AND id IN
                (SELECT id
                 FROM person
                 WHERE team_id = 2
                   AND ((has(['test'], replaceRegexpAll(JSONExtractRaw(person.properties, 'name'), '^"|"$', '')))) )
            GROUP BY id
            HAVING max(is_deleted) = 0
            AND ((has(['test'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'name'), '^"|"$', ''))))))
  '
---
# name: TestEventQuery.test_entity_filtered_by_multiple_session_duration_filters
  '
  
  SELECT e.timestamp as timestamp,
         sessions.session_duration as session_duration,
         sessions.$session_id as $session_id,
         e.person_id as person_id
  FROM events e
  INNER JOIN
    (SELECT $session_id,
            dateDiff('second', min(timestamp), max(timestamp)) as session_duration
     FROM events
     WHERE $session_id != ''
       AND team_id = 2
       AND timestamp >= toDateTime('2021-05-02 00:00:00') - INTERVAL 24 HOUR
       AND timestamp <= toDateTime('2021-05-03 00:00:00') + INTERVAL 24 HOUR
     GROUP BY $session_id) as sessions ON sessions.$session_id = e.$session_id
  WHERE team_id = 2
    AND event = '$pageview'
    AND timestamp >= toDateTime('2021-05-02 00:00:00')
    AND timestamp <= toDateTime('2021-05-03 00:00:00')
    AND (sessions.session_duration > 90.0
         AND sessions.session_duration < 150.0)
  '
---
# name: TestEventQuery.test_entity_filtered_by_session_duration
  '
  
  SELECT e.timestamp as timestamp,
         sessions.session_duration as session_duration,
         sessions.$session_id as $session_id,
         e.person_id as person_id
  FROM events e
  INNER JOIN
    (SELECT $session_id,
            dateDiff('second', min(timestamp), max(timestamp)) as session_duration
     FROM events
     WHERE $session_id != ''
       AND team_id = 2
       AND timestamp >= toDateTime('2021-05-02 00:00:00') - INTERVAL 24 HOUR
       AND timestamp <= toDateTime('2021-05-03 00:00:00') + INTERVAL 24 HOUR
     GROUP BY $session_id) as sessions ON sessions.$session_id = e.$session_id
  WHERE team_id = 2
    AND event = '$pageview'
    AND timestamp >= toDateTime('2021-05-02 00:00:00')
    AND timestamp <= toDateTime('2021-05-03 00:00:00')
    AND (sessions.session_duration > 90.0)
  '
---
# name: TestEventQuery.test_event_properties_filter
  '
  
  SELECT e.timestamp as timestamp,
         e."properties" as "properties",
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'viewed'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-05-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-05-07 00:00:00')
    AND (has(['test_val'], replaceRegexpAll(JSONExtractRaw(e.properties, 'some_key'), '^"|"$', '')))
  '
---
# name: TestEventQuery.test_event_properties_filter.1
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'viewed'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-05-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-05-07 00:00:00')
    AND (has(['test_val'], replaceRegexpAll(JSONExtractRaw(e.properties, 'some_key'), '^"|"$', '')))
  '
---
# name: TestEventQuery.test_groups_filters
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id,
         e."group0_properties" as "group0_properties",
         e."group1_properties" as "group1_properties"
  FROM events e
  WHERE team_id = 2
    AND event = '$pageview'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2020-01-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2020-01-12 23:59:59')
    AND ((has(['finance'], replaceRegexpAll(JSONExtractRaw(group0_properties, 'industry'), '^"|"$', '')))
         AND (has(['value'], replaceRegexpAll(JSONExtractRaw(group1_properties, 'another'), '^"|"$', ''))))
  '
---
# name: TestEventQuery.test_groups_filters_mixed
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id,
         e."person_properties" as "person_properties",
         e."group0_properties" as "group0_properties"
  FROM events e
  WHERE team_id = 2
    AND event = '$pageview'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2020-01-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2020-01-12 23:59:59')
    AND ((has(['finance'], replaceRegexpAll(JSONExtractRaw(group0_properties, 'industry'), '^"|"$', '')))
         AND (has(['test'], replaceRegexpAll(JSONExtractRaw(e.person_properties, '$browser'), '^"|"$', ''))))
  '
---
# name: TestEventQuery.test_static_cohort_filter
  '
  
  SELECT e.timestamp as timestamp,
         e.person_id as person_id
  FROM events e
  WHERE team_id = 2
    AND event = 'viewed'
    AND timestamp >= toTimezone(toDateTime(toStartOfDay(toDateTime('2021-05-01 00:00:00')), 'UTC'), 'UTC')
    AND timestamp <= toDateTime('2021-05-07 00:00:00')
    AND (person_id IN
           (SELECT person_id as id
            FROM person_static_cohort
            WHERE cohort_id = 2
              AND team_id = 2))
  '
---
# name: TestEventQuery.test_unique_session_math_filtered_by_session_duration
  '
  
  SELECT e.timestamp as timestamp,
         e."$session_id" as "$session_id",
         sessions.session_duration as session_duration,
         e.person_id as person_id
  FROM events e
  INNER JOIN
    (SELECT $session_id,
            dateDiff('second', min(timestamp), max(timestamp)) as session_duration
     FROM events
     WHERE $session_id != ''
       AND team_id = 2
       AND timestamp >= toDateTime('2021-05-02 00:00:00') - INTERVAL 24 HOUR
       AND timestamp <= toDateTime('2021-05-03 00:00:00') + INTERVAL 24 HOUR
     GROUP BY $session_id) as sessions ON sessions.$session_id = e.$session_id
  WHERE team_id = 2
    AND event = '$pageview'
    AND timestamp >= toDateTime('2021-05-02 00:00:00')
    AND timestamp <= toDateTime('2021-05-03 00:00:00')
    AND (sessions.session_duration > 30.0)
  '
---
